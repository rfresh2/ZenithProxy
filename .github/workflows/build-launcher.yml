name: Build Launcher

on:
  workflow_dispatch:

env:
  python_version: '3.12'

jobs:
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'windows-2019', 'ubuntu-20.04', 'macos-11' ]
        include:
          - os: 'windows-2019'
            artifact-name: 'launcher-windows-amd64'
            move-command: 'Move-Item -Path .\dist\main.exe -Destination .\dist\launcher.exe'
            zip-command: 'Compress-Archive -Path .\dist\launcher.exe -DestinationPath .\dist\ZenithProxy-launcher-windows-amd64.zip'
          - os: 'ubuntu-20.04'
            artifact-name: 'launcher-linux-amd64'
            move-command: 'mv dist/main dist/launcher'
            zip-command: 'zip -j dist/ZenithProxy-launcher-linux-amd64.zip dist/launcher'
          - os: 'macos-11'
            artifact-name: 'launcher-macos-amd64'
            move-command: 'mv dist/main dist/launcher'
            zip-command: 'zip -j dist/ZenithProxy-launcher-macos-amd64.zip dist/launcher'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python_version }}

      - name: Install PyInstaller
        run: |
          pip install -U pyinstaller

      - name: Build launcher
        run: |
          pyinstaller --specpath ./build -p ./src/launcher --onefile --noconfirm ./src/launcher/main.py

      - name: Rename executable
        run: |
          ${{ matrix.move-command }}

      - name: Create zip
        run: |
          ${{ matrix.zip-command }}

      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: dist/ZenithProxy-${{ matrix.artifact-name }}.zip

  build-linux-aarch64:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build binary on emulated aarch64
        run: |
          docker run --rm --platform linux/arm64 --volume "${PWD}:/repo" python:${{ env.python_version }}-bullseye /bin/sh -c " \
            cd /repo && \
            python3 -m pip install -U pyinstaller && \
            pyinstaller --specpath ./build -p ./src/launcher --onefile --noconfirm ./src/launcher/main.py
          "

      - name: Rename executable
        run: |
          sudo mv dist/main dist/launcher

      - name: Elevate binary permissions
        run: sudo chmod +x dist/launcher

      - name: Create zip
        run: sudo zip -j dist/ZenithProxy-launcher-linux-aarch64.zip dist/launcher

      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: launcher-linux-aarch64
          path: dist/ZenithProxy-launcher-linux-aarch64.zip

  release-artifacts:
    needs:
      - build-matrix
      - build-linux-aarch64
    runs-on: ubuntu-20.04
    steps:
      - name: Download job artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: artifacts/
      - name: Publish Release Artifacts
        uses: ncipollo/release-action@v1
        with:
          tag: "launcher-v3"
          artifacts: artifacts/*.zip
          allowUpdates: true
          replacesArtifacts: true
          omitBodyDuringUpdate: true
          prerelease: true
          removeArtifacts: true
#          makeLatest: true
